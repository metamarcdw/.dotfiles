# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/cypher/.eric6/eric6plugins/WizardVirtualenv/VirtualenvConfigurationDialog.ui'
#
# Created by: PyQt5 UI code generator 5.8
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_VirtualenvConfigurationDialog(object):
    def setupUi(self, VirtualenvConfigurationDialog):
        VirtualenvConfigurationDialog.setObjectName("VirtualenvConfigurationDialog")
        VirtualenvConfigurationDialog.resize(700, 590)
        VirtualenvConfigurationDialog.setSizeGripEnabled(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(VirtualenvConfigurationDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox_3 = QtWidgets.QGroupBox(VirtualenvConfigurationDialog)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.virtualenvButton = QtWidgets.QRadioButton(self.groupBox_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.virtualenvButton.setFont(font)
        self.virtualenvButton.setText("0.0")
        self.virtualenvButton.setObjectName("virtualenvButton")
        self.gridLayout_3.addWidget(self.virtualenvButton, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem, 0, 1, 1, 1)
        self.pyvenvButton = QtWidgets.QRadioButton(self.groupBox_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pyvenvButton.setFont(font)
        self.pyvenvButton.setText("0.0")
        self.pyvenvButton.setObjectName("pyvenvButton")
        self.gridLayout_3.addWidget(self.pyvenvButton, 1, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_3)
        self.groupBox = QtWidgets.QGroupBox(VirtualenvConfigurationDialog)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.targetDirectoryEdit = E5ClearableLineEdit(self.groupBox)
        self.targetDirectoryEdit.setObjectName("targetDirectoryEdit")
        self.gridLayout.addWidget(self.targetDirectoryEdit, 0, 1, 1, 1)
        self.targetDirectoryButton = QtWidgets.QToolButton(self.groupBox)
        self.targetDirectoryButton.setObjectName("targetDirectoryButton")
        self.gridLayout.addWidget(self.targetDirectoryButton, 0, 2, 1, 1)
        self.extraSearchPathLabel = QtWidgets.QLabel(self.groupBox)
        self.extraSearchPathLabel.setObjectName("extraSearchPathLabel")
        self.gridLayout.addWidget(self.extraSearchPathLabel, 1, 0, 1, 1)
        self.extraSearchPathEdit = E5ClearableLineEdit(self.groupBox)
        self.extraSearchPathEdit.setObjectName("extraSearchPathEdit")
        self.gridLayout.addWidget(self.extraSearchPathEdit, 1, 1, 1, 1)
        self.extraSearchPathButton = QtWidgets.QToolButton(self.groupBox)
        self.extraSearchPathButton.setObjectName("extraSearchPathButton")
        self.gridLayout.addWidget(self.extraSearchPathButton, 1, 2, 1, 1)
        self.promptPrefixLabel = QtWidgets.QLabel(self.groupBox)
        self.promptPrefixLabel.setObjectName("promptPrefixLabel")
        self.gridLayout.addWidget(self.promptPrefixLabel, 2, 0, 1, 1)
        self.promptPrefixEdit = E5ClearableLineEdit(self.groupBox)
        self.promptPrefixEdit.setObjectName("promptPrefixEdit")
        self.gridLayout.addWidget(self.promptPrefixEdit, 2, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 3, 0, 1, 1)
        self.pythonExecEdit = E5ClearableLineEdit(self.groupBox)
        self.pythonExecEdit.setObjectName("pythonExecEdit")
        self.gridLayout.addWidget(self.pythonExecEdit, 3, 1, 1, 1)
        self.pythonExecButton = QtWidgets.QToolButton(self.groupBox)
        self.pythonExecButton.setObjectName("pythonExecButton")
        self.gridLayout.addWidget(self.pythonExecButton, 3, 2, 1, 1)
        self.verticalLayout.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(VirtualenvConfigurationDialog)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verbosityLabel = QtWidgets.QLabel(self.groupBox_2)
        self.verbosityLabel.setObjectName("verbosityLabel")
        self.horizontalLayout_3.addWidget(self.verbosityLabel)
        self.verbositySpinBox = QtWidgets.QSpinBox(self.groupBox_2)
        self.verbositySpinBox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.verbositySpinBox.setMinimum(-1)
        self.verbositySpinBox.setMaximum(1)
        self.verbositySpinBox.setObjectName("verbositySpinBox")
        self.horizontalLayout_3.addWidget(self.verbositySpinBox)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.versionLabel = QtWidgets.QLabel(self.groupBox_2)
        self.versionLabel.setObjectName("versionLabel")
        self.horizontalLayout.addWidget(self.versionLabel)
        self.versionComboBox = QtWidgets.QComboBox(self.groupBox_2)
        self.versionComboBox.setObjectName("versionComboBox")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(0, "")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(1, "2.6")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(2, "2.7")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(3, "3.2")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(4, "3.3")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(5, "3.4")
        self.versionComboBox.addItem("")
        self.versionComboBox.setItemText(6, "3.5")
        self.versionComboBox.addItem("")
        self.horizontalLayout.addWidget(self.versionComboBox)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.gridLayout_2.addLayout(self.horizontalLayout, 0, 1, 1, 1)
        self.systemCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.systemCheckBox.setObjectName("systemCheckBox")
        self.gridLayout_2.addWidget(self.systemCheckBox, 1, 0, 1, 1)
        self.unzipCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.unzipCheckBox.setChecked(True)
        self.unzipCheckBox.setObjectName("unzipCheckBox")
        self.gridLayout_2.addWidget(self.unzipCheckBox, 1, 1, 1, 1)
        self.noSetuptoolsCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.noSetuptoolsCheckBox.setObjectName("noSetuptoolsCheckBox")
        self.gridLayout_2.addWidget(self.noSetuptoolsCheckBox, 2, 0, 1, 1)
        self.noPipCcheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.noPipCcheckBox.setObjectName("noPipCcheckBox")
        self.gridLayout_2.addWidget(self.noPipCcheckBox, 2, 1, 1, 1)
        self.clearCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.clearCheckBox.setObjectName("clearCheckBox")
        self.gridLayout_2.addWidget(self.clearCheckBox, 3, 0, 1, 1)
        self.copyCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.copyCheckBox.setObjectName("copyCheckBox")
        self.gridLayout_2.addWidget(self.copyCheckBox, 3, 1, 1, 1)
        self.symlinkCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.symlinkCheckBox.setObjectName("symlinkCheckBox")
        self.gridLayout_2.addWidget(self.symlinkCheckBox, 4, 0, 1, 1)
        self.upgradeCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.upgradeCheckBox.setObjectName("upgradeCheckBox")
        self.gridLayout_2.addWidget(self.upgradeCheckBox, 4, 1, 1, 1)
        self.logCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.logCheckBox.setChecked(True)
        self.logCheckBox.setObjectName("logCheckBox")
        self.gridLayout_2.addWidget(self.logCheckBox, 5, 0, 1, 1)
        self.scriptCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.scriptCheckBox.setChecked(True)
        self.scriptCheckBox.setObjectName("scriptCheckBox")
        self.gridLayout_2.addWidget(self.scriptCheckBox, 5, 1, 1, 1)
        self.openCheckBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.openCheckBox.setChecked(True)
        self.openCheckBox.setObjectName("openCheckBox")
        self.gridLayout_2.addWidget(self.openCheckBox, 6, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_2)
        self.buttonBox = QtWidgets.QDialogButtonBox(VirtualenvConfigurationDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(VirtualenvConfigurationDialog)
        self.buttonBox.accepted.connect(VirtualenvConfigurationDialog.accept)
        self.buttonBox.rejected.connect(VirtualenvConfigurationDialog.reject)
        QtCore.QMetaObject.connectSlotsByName(VirtualenvConfigurationDialog)
        VirtualenvConfigurationDialog.setTabOrder(self.virtualenvButton, self.pyvenvButton)
        VirtualenvConfigurationDialog.setTabOrder(self.pyvenvButton, self.targetDirectoryEdit)
        VirtualenvConfigurationDialog.setTabOrder(self.targetDirectoryEdit, self.targetDirectoryButton)
        VirtualenvConfigurationDialog.setTabOrder(self.targetDirectoryButton, self.extraSearchPathEdit)
        VirtualenvConfigurationDialog.setTabOrder(self.extraSearchPathEdit, self.extraSearchPathButton)
        VirtualenvConfigurationDialog.setTabOrder(self.extraSearchPathButton, self.promptPrefixEdit)
        VirtualenvConfigurationDialog.setTabOrder(self.promptPrefixEdit, self.pythonExecEdit)
        VirtualenvConfigurationDialog.setTabOrder(self.pythonExecEdit, self.pythonExecButton)
        VirtualenvConfigurationDialog.setTabOrder(self.pythonExecButton, self.verbositySpinBox)
        VirtualenvConfigurationDialog.setTabOrder(self.verbositySpinBox, self.versionComboBox)
        VirtualenvConfigurationDialog.setTabOrder(self.versionComboBox, self.systemCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.systemCheckBox, self.unzipCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.unzipCheckBox, self.noSetuptoolsCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.noSetuptoolsCheckBox, self.noPipCcheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.noPipCcheckBox, self.clearCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.clearCheckBox, self.copyCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.copyCheckBox, self.symlinkCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.symlinkCheckBox, self.upgradeCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.upgradeCheckBox, self.logCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.logCheckBox, self.scriptCheckBox)
        VirtualenvConfigurationDialog.setTabOrder(self.scriptCheckBox, self.openCheckBox)

    def retranslateUi(self, VirtualenvConfigurationDialog):
        _translate = QtCore.QCoreApplication.translate
        VirtualenvConfigurationDialog.setWindowTitle(_translate("VirtualenvConfigurationDialog", "Virtualenv Configuration"))
        self.groupBox_3.setTitle(_translate("VirtualenvConfigurationDialog", "Environment Creator"))
        self.virtualenvButton.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to use \'virtualenv\'"))
        self.pyvenvButton.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to use \'pyvenv\'"))
        self.groupBox.setTitle(_translate("VirtualenvConfigurationDialog", "Paths"))
        self.label.setText(_translate("VirtualenvConfigurationDialog", "Target Directory:"))
        self.targetDirectoryEdit.setToolTip(_translate("VirtualenvConfigurationDialog", "Enter the target directory for the virtual environment"))
        self.targetDirectoryEdit.setPlaceholderText(_translate("VirtualenvConfigurationDialog", "Target directory for the virtual environment"))
        self.targetDirectoryButton.setToolTip(_translate("VirtualenvConfigurationDialog", "Select the target directory via a directory selection dialog"))
        self.extraSearchPathLabel.setText(_translate("VirtualenvConfigurationDialog", "Extra Search Path:"))
        self.extraSearchPathEdit.setToolTip(_translate("VirtualenvConfigurationDialog", "Enter the extra search path to look for setuptools/pip"))
        self.extraSearchPathEdit.setPlaceholderText(_translate("VirtualenvConfigurationDialog", "Extra search path to look for setuptools/pip"))
        self.extraSearchPathButton.setToolTip(_translate("VirtualenvConfigurationDialog", "Select the extra search path to look for setuptools/pip via a directory selection dialog"))
        self.promptPrefixLabel.setText(_translate("VirtualenvConfigurationDialog", "Prompt Prefix:"))
        self.promptPrefixEdit.setToolTip(_translate("VirtualenvConfigurationDialog", "Enter the prompt prefix for the virtual environment"))
        self.promptPrefixEdit.setPlaceholderText(_translate("VirtualenvConfigurationDialog", "Prompt prefix for the virtual environment"))
        self.label_5.setText(_translate("VirtualenvConfigurationDialog", "Python Executable:"))
        self.pythonExecEdit.setToolTip(_translate("VirtualenvConfigurationDialog", "Enter the Python interpreter for the virtual environment"))
        self.pythonExecEdit.setPlaceholderText(_translate("VirtualenvConfigurationDialog", "Python interpreter for the virtual environment"))
        self.pythonExecButton.setToolTip(_translate("VirtualenvConfigurationDialog", "Select the Python interpreter via a file selection dialog"))
        self.groupBox_2.setTitle(_translate("VirtualenvConfigurationDialog", "Options"))
        self.verbosityLabel.setText(_translate("VirtualenvConfigurationDialog", "Verbosity:"))
        self.verbositySpinBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select the verbosity (-1: quiet, 0: normal, 1: verbose)"))
        self.versionLabel.setText(_translate("VirtualenvConfigurationDialog", "Python Version:"))
        self.versionComboBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select the Python version (empty for current)"))
        self.versionComboBox.setItemText(7, _translate("VirtualenvConfigurationDialog", "3.6"))
        self.systemCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to give the virtualenv access to the global site-packages"))
        self.systemCheckBox.setText(_translate("VirtualenvConfigurationDialog", "System-wide Python Packages"))
        self.unzipCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to unzip setuptools when installing it"))
        self.unzipCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Unzip Setuptool to virtualenv"))
        self.noSetuptoolsCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to not install setuptools (or pip) in the new virtualenv"))
        self.noSetuptoolsCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Don\'t install \'setuptool\' (or pip) in the virtualenv"))
        self.noPipCcheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to not install pip in the new virtualenv"))
        self.noPipCcheckBox.setText(_translate("VirtualenvConfigurationDialog", "Don\'t install \'pip\' in the virtualenv"))
        self.clearCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to clear the target first"))
        self.clearCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Clear out the target directory"))
        self.copyCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to always copy files rather than symlinking"))
        self.copyCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Always copy files"))
        self.symlinkCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to use symlinks instead of copies"))
        self.symlinkCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Use Symbolic Links"))
        self.upgradeCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to upgrade a virtual environment"))
        self.upgradeCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Upgrade"))
        self.logCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to generate a log file in the target directory"))
        self.logCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Save a log file in the target directory after creation"))
        self.scriptCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Select to write a shell script/batch file to regenerate the virtualenv"))
        self.scriptCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Save virtualenv generation script"))
        self.openCheckBox.setToolTip(_translate("VirtualenvConfigurationDialog", "Open the newly created virtualenv in a file manager window"))
        self.openCheckBox.setText(_translate("VirtualenvConfigurationDialog", "Open target directory after creation"))

from E5Gui.E5LineEdit import E5ClearableLineEdit
